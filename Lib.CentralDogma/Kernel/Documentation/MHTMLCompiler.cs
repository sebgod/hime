/*
 * Author: Laurent Wouters
 * Date: 14/09/2011
 * Time: 17:22
 * 
 */
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace Hime.Kernel.Documentation
{
    internal class MHTMLCompiler
    {
		// TODO: why 76? Magic number?
        private const int linebreak = 76;
		private const string boundary = "----=_NextPart_000_0000_01CC2201.CF84F290";
        private const string generator = "Generated by Hime.Kernel.Documentation.MHTMLCompiler";
		
		private List<MHTMLSource> sources;
        private string title;
        

        internal MHTMLCompiler(string title)
        {
			this.title = title;
            sources = new List<MHTMLSource>();
        }

        internal void AddSource(MHTMLSource source) 
		{ 
			sources.Add(source); 
		}

        internal void CompileTo(string file)
        {
            using (StreamWriter writer = new StreamWriter(file, false, Encoding.UTF8))
			{
	            writer.Write("From: ");
    	        writer.WriteLine("\"" + generator + "\"");
        	    writer.Write("Subject: ");
            	writer.WriteLine(title);
	            writer.Write("Date: ");
    	        writer.WriteLine(System.DateTime.Now.ToLongDateString());
        	    writer.WriteLine("MIME-Version: 1.0");
            	writer.WriteLine("Content-Type: multipart/related;");
	            writer.WriteLine("\ttype=\"text/html\";");
    	        writer.WriteLine("\tboundary=\"" + boundary + "\"");

        	    foreach (MHTMLSource source in sources)
            	{
	                writer.WriteLine();
    	            writer.WriteLine();
        	        writer.WriteLine("--" + boundary);
            	    writer.Write("Content-Type: ");
                	writer.WriteLine(source.ContentType);
	                writer.Write("Content-Transfer-Encoding: ");
    	            writer.WriteLine(source.ContentTransferEncoding);
        	        writer.Write("Content-Location: ");
            	    writer.WriteLine(source.ContentLocation);
                	writer.WriteLine();

	                int length = 0;
    	            string text = source.Read();
        	        while (text != null)
            	    {
                	    while (linebreak < (length + text.Length))
                    	{
	                        string part1 = text.Substring(0, linebreak - length);
    	                    text = text.Substring(linebreak - length);
        	                writer.WriteLine(part1);
            	            length = 0;
                	    }
                    	length += text.Length;
	                    writer.Write(text);
    	                text = source.Read();
        	        }
            	    source.Close();
            	}

	            writer.WriteLine();
    	        writer.WriteLine();
        	    writer.WriteLine("--" + boundary + "--");
            	writer.Close();
        	}
		}
    }
}
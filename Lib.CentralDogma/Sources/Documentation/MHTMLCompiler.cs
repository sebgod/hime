/**********************************************************************
* Copyright (c) 2013 Laurent Wouters and others
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as
* published by the Free Software Foundation, either version 3
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
* 
* You should have received a copy of the GNU Lesser General
* Public License along with this program.
* If not, see <http://www.gnu.org/licenses/>.
* 
* Contributors:
*     Laurent Wouters - lwouters@xowl.org
**********************************************************************/

using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace Hime.CentralDogma.Documentation
{
	/// <summary>
	/// Represents a compiler of resources that produces a MHTML file
	/// </summary>
    class MHTMLCompiler
    {
    	/// <summary>
    	/// The maximum length of a line in a MHTML document
    	/// </summary>
    	/// <remarks>
    	/// The value is specified in the standard
    	/// </remarks>
		private const int linebreak = 76;
		/// <summary>
		/// Marker in a MHTML file for separating different resources
		/// </summary>
		private const string boundary = "----=NextPart";
		/// <summary>
		/// Marker in the MHTML file for the origin
		/// </summary>
        private const string generator = "Generated by Hime.CentralDogma";
		
        /// <summary>
        /// List of the resources to compile
        /// </summary>
		private List<MHTMLSource> sources;
		
		/// <summary>
		/// The MHTML document's title
		/// </summary>
        private string title;

        /// <summary>
        /// Initializes this compiler
        /// </summary>
        /// <param name="title">The resulting document's title</param>
        public MHTMLCompiler(string title)
        {
			this.title = title;
            sources = new List<MHTMLSource>();
        }

        /// <summary>
        /// Adds a new source to the compiler
        /// </summary>
        /// <param name="source"></param>
        public void AddSource(MHTMLSource source) 
		{ 
			sources.Add(source); 
		}

        /// <summary>
        /// Compiles the gathered resources to the given file
        /// </summary>
        /// <param name="file">The file to compile to</param>
        public void CompileTo(string file)
        {
            using (StreamWriter writer = new StreamWriter(file, false, Encoding.UTF8))
			{
	            writer.Write("From: ");
    	        writer.WriteLine("\"" + generator + "\"");
        	    writer.Write("Subject: ");
            	writer.WriteLine(title);
	            writer.Write("Date: ");
    	        writer.WriteLine(DateTime.Now.ToLongDateString());
        	    writer.WriteLine("MIME-Version: 1.0");
            	writer.WriteLine("Content-Type: multipart/related;");
	            writer.WriteLine("\ttype=\"text/html\";");
    	        writer.WriteLine("\tboundary=\"" + boundary + "\"");

        	    foreach (MHTMLSource source in sources)
            	{
	                writer.WriteLine();
    	            writer.WriteLine();
        	        writer.WriteLine("--" + boundary);
                    source.ToMHTML(writer, linebreak);
            	}

	            writer.WriteLine();
    	        writer.WriteLine();
        	    writer.WriteLine("--" + boundary + "--");
            	writer.Close();
        	}
		}
    }
}
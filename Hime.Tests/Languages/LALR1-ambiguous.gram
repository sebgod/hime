public grammar cf AmbiguousLALR1
{
	options
	{
		Axiom = "compilation_unit";
		Separator = "WHITE_SPACE";
	}
	terminals
	{
		WHITE_SPACE		-> 0x0020 | 0x0009 | 0x000B | 0x000C ;
		IDENTIFIER		-> '@'? [a-zA-Z] [a-zA-Z0-9_]* ;
	}
	rules
	{
		qualified_name		-> IDENTIFIER ('.' IDENTIFIER)* ;
			
		/* Types grammar */
		type					-> qualified_name ;

		/* Expressions grammar */
		exp_atom				-> IDENTIFIER
								|  '(' expression ')' ;

		exp_op0					-> exp_atom ;
			
		exp_op1_cast			-> '(' type ')' exp_op1 ;
		exp_op1					-> exp_op0
								|  exp_op1_cast ;
			
		exp_op2					-> exp_op1
								|  exp_op2 '*' exp_op1 ;
		exp_op11				-> exp_op2 ;
			
		exp_op12_conditional	-> exp_op11;
		exp_op13_assigment		-> exp_op1 '=' expression ;
			
		expression				-> exp_op12_conditional
								|  exp_op13_assigment ;

		compilation_unit		-> expression ;
	}
}